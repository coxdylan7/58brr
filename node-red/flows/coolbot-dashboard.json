[
    {
        "id": "coolbot-dashboard-tab",
        "type": "tab",
        "label": "CoolBot Dashboard",
        "disabled": false,
        "info": "Dashboard interface for CoolBot AC automation system"
    },
    {
        "id": "temp-gauge-room",
        "type": "ui_gauge",
        "z": "coolbot-dashboard-tab",
        "name": "Room Temperature",
        "group": "temp-group",
        "order": 1,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Room Temperature",
        "label": "째F",
        "format": "{{value}}",
        "min": 0,
        "max": 100,
        "colors": [
            "#00b500",
            "#e6e600", 
            "#ca3838"
        ],
        "seg1": 25,
        "seg2": 40,
        "className": "",
        "x": 200,
        "y": 100,
        "wires": []
    },
    {
        "id": "temp-gauge-coil",
        "type": "ui_gauge",
        "z": "coolbot-dashboard-tab",
        "name": "Coil Temperature",
        "group": "temp-group",
        "order": 2,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Coil Temperature",
        "label": "째F",
        "format": "{{value}}",
        "min": 0,
        "max": 80,
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": 33,
        "seg2": 50,
        "className": "",
        "x": 200,
        "y": 160,
        "wires": []
    },
    {
        "id": "target-temp-slider",
        "type": "ui_slider",
        "z": "coolbot-dashboard-tab",
        "name": "Target Temperature",
        "label": "Target Temperature",
        "tooltip": "",
        "group": "controls-group",
        "order": 1,
        "width": 0,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "target_temp",
        "topicType": "str",
        "min": 25,
        "max": 45,
        "step": 1,
        "className": "",
        "x": 200,
        "y": 260,
        "wires": [["target-temp-update"]]
    },
    {
        "id": "target-temp-update",
        "type": "function",
        "z": "coolbot-dashboard-tab",
        "name": "Update Target",
        "func": "flow.set('target_temp', msg.payload);\nnode.log(`Target temperature set to ${msg.payload}째F`);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 260,
        "wires": [[]]
    },
    {
        "id": "hysteresis-slider",
        "type": "ui_slider",
        "z": "coolbot-dashboard-tab",
        "name": "Hysteresis",
        "label": "Hysteresis",
        "tooltip": "Temperature range above target before cooling starts",
        "group": "controls-group",
        "order": 2,
        "width": 0,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "hysteresis",
        "topicType": "str",
        "min": 1,
        "max": 5,
        "step": 0.5,
        "className": "",
        "x": 200,
        "y": 320,
        "wires": [["hysteresis-update"]]
    },
    {
        "id": "hysteresis-update",
        "type": "function",
        "z": "coolbot-dashboard-tab",
        "name": "Update Hysteresis",
        "func": "flow.set('hysteresis', msg.payload);\nnode.log(`Hysteresis set to ${msg.payload}째F`);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 320,
        "wires": [[]]
    },
    {
        "id": "status-text",
        "type": "ui_text",
        "z": "coolbot-dashboard-tab",
        "group": "status-group",
        "order": 1,
        "width": 6,
        "height": 2,
        "name": "System Status",
        "label": "Status:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 200,
        "y": 400,
        "wires": []
    },
    {
        "id": "ac-status-led",
        "type": "ui_led",
        "z": "coolbot-dashboard-tab",
        "order": 2,
        "group": "status-group",
        "width": 3,
        "height": 1,
        "label": "AC Running",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#00ff00",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "AC Status LED",
        "x": 200,
        "y": 460,
        "wires": []
    },
    {
        "id": "runtime-text",
        "type": "ui_text",
        "z": "coolbot-dashboard-tab",
        "group": "status-group",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "Runtime Info",
        "label": "Runtime:",
        "format": "{{msg.payload.hours}} hours",
        "layout": "row-spread",
        "className": "",
        "x": 200,
        "y": 520,
        "wires": []
    },
    {
        "id": "emergency-stop",
        "type": "ui_button",
        "z": "coolbot-dashboard-tab",
        "name": "Emergency Stop",
        "group": "controls-group",
        "order": 3,
        "width": 0,
        "height": 1,
        "passthru": false,
        "label": "EMERGENCY STOP",
        "tooltip": "Immediately turn off AC and disable automation",
        "color": "white",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "emergency_stop",
        "payloadType": "str",
        "topic": "emergency",
        "topicType": "str",
        "x": 200,
        "y": 580,
        "wires": [["emergency-handler"]]
    },
    {
        "id": "emergency-handler",
        "type": "function",
        "z": "coolbot-dashboard-tab",
        "name": "Emergency Stop Handler",
        "func": "// Immediately turn off AC\nflow.set('ac_status', 'off');\nflow.set('system_status', 'emergency_stop');\nflow.set('emergency_mode', true);\n\nnode.warn('EMERGENCY STOP ACTIVATED');\n\n// Send command to turn off AC\nconst acOffMsg = {\n    payload: {\n        domain: 'switch',\n        service: 'turn_off',\n        data: {\n            entity_id: 'switch.ac_plug'\n        }\n    },\n    emergency: true\n};\n\n// Also turn off heating pad\nconst heatingOffMsg = {\n    payload: {\n        domain: 'switch', \n        service: 'turn_off',\n        data: {\n            entity_id: 'switch.heating_pad'\n        }\n    },\n    emergency: true\n};\n\nreturn [acOffMsg, heatingOffMsg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 580,
        "wires": [["emergency-ac-off"], ["emergency-heating-off"]]
    },
    {
        "id": "emergency-ac-off",
        "type": "ha-call-service",
        "z": "coolbot-dashboard-tab",
        "name": "Emergency AC Off",
        "server": "home-assistant",
        "version": 5,
        "debugenabled": false,
        "domain": "{{payload.domain}}",
        "service": "{{payload.service}}",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{{payload.data}}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 680,
        "y": 560,
        "wires": [[]]
    },
    {
        "id": "emergency-heating-off",
        "type": "ha-call-service",
        "z": "coolbot-dashboard-tab",
        "name": "Emergency Heating Off",
        "server": "home-assistant",
        "version": 5,
        "debugenabled": false,
        "domain": "{{payload.domain}}",
        "service": "{{payload.service}}",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{{payload.data}}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 680,
        "y": 600,
        "wires": [[]]
    },
    {
        "id": "reset-system",
        "type": "ui_button",
        "z": "coolbot-dashboard-tab",
        "name": "Reset System",
        "group": "controls-group",
        "order": 4,
        "width": 0,
        "height": 1,
        "passthru": false,
        "label": "Reset System",
        "tooltip": "Reset emergency mode and resume normal operation",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "reset",
        "payloadType": "str",
        "topic": "system",
        "topicType": "str",
        "x": 200,
        "y": 640,
        "wires": [["reset-handler"]]
    },
    {
        "id": "reset-handler",
        "type": "function",
        "z": "coolbot-dashboard-tab",
        "name": "System Reset",
        "func": "// Reset emergency mode\nflow.set('emergency_mode', false);\nflow.set('system_status', 'normal_operation');\nflow.set('last_off_time', Date.now());\n\nnode.log('System reset - resuming normal operation');\n\nreturn { payload: 'System reset successfully' };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 640,
        "wires": [["reset-notification"]]
    },
    {
        "id": "reset-notification",
        "type": "ui_toast",
        "z": "coolbot-dashboard-tab",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Reset Toast",
        "x": 600,
        "y": 640,
        "wires": []
    },
    {
        "id": "settings-toggle-heating",
        "type": "ui_switch",
        "z": "coolbot-dashboard-tab",
        "name": "Enable Heating Pad",
        "label": "Heating Pad",
        "tooltip": "Enable/disable heating pad control",
        "group": "settings-group",
        "order": 1,
        "width": 0,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "heating_pad",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 700,
        "wires": [["heating-toggle-update"]]
    },
    {
        "id": "heating-toggle-update",
        "type": "function",
        "z": "coolbot-dashboard-tab",
        "name": "Update Heating Setting",
        "func": "flow.set('enable_heating_pad', msg.payload);\nnode.log(`Heating pad ${msg.payload ? 'enabled' : 'disabled'}`);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 700,
        "wires": [[]]
    },
    {
        "id": "settings-toggle-ir",
        "type": "ui_switch",
        "z": "coolbot-dashboard-tab",
        "name": "Enable IR Control",
        "label": "IR Control",
        "tooltip": "Enable/disable IR blaster commands",
        "group": "settings-group",
        "order": 2,
        "width": 0,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "ir_control",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 760,
        "wires": [["ir-toggle-update"]]
    },
    {
        "id": "ir-toggle-update",
        "type": "function",
        "z": "coolbot-dashboard-tab",
        "name": "Update IR Setting",
        "func": "flow.set('enable_ir_control', msg.payload);\nnode.log(`IR control ${msg.payload ? 'enabled' : 'disabled'}`);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 760,
        "wires": [[]]
    },
    {
        "id": "temp-group",
        "type": "ui_group",
        "name": "Temperature Monitoring",
        "tab": "coolbot-ui-tab",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "controls-group",
        "type": "ui_group",
        "name": "Controls",
        "tab": "coolbot-ui-tab",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "status-group",
        "type": "ui_group",
        "name": "System Status",
        "tab": "coolbot-ui-tab",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "settings-group",
        "type": "ui_group",
        "name": "Settings",
        "tab": "coolbot-ui-tab",
        "order": 4,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "coolbot-ui-tab",
        "type": "ui_tab",
        "name": "CoolBot Control",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]